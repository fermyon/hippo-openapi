/* tslint:disable */
/* eslint-disable */
/**
 * Hippo.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnvironmentVariableDto } from './EnvironmentVariableDto';
import {
    EnvironmentVariableDtoFromJSON,
    EnvironmentVariableDtoFromJSONTyped,
    EnvironmentVariableDtoToJSON,
} from './EnvironmentVariableDto';

/**
 * 
 * @export
 * @interface EnvironmentVariablesVm
 */
export interface EnvironmentVariablesVm {
    /**
     * 
     * @type {Array<EnvironmentVariableDto>}
     * @memberof EnvironmentVariablesVm
     */
    environmentVariables: Array<EnvironmentVariableDto>;
}

/**
 * Check if a given object implements the EnvironmentVariablesVm interface.
 */
export function instanceOfEnvironmentVariablesVm(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "environmentVariables" in value;

    return isInstance;
}

export function EnvironmentVariablesVmFromJSON(json: any): EnvironmentVariablesVm {
    return EnvironmentVariablesVmFromJSONTyped(json, false);
}

export function EnvironmentVariablesVmFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnvironmentVariablesVm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'environmentVariables': ((json['environmentVariables'] as Array<any>).map(EnvironmentVariableDtoFromJSON)),
    };
}

export function EnvironmentVariablesVmToJSON(value?: EnvironmentVariablesVm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'environmentVariables': ((value.environmentVariables as Array<any>).map(EnvironmentVariableDtoToJSON)),
    };
}

