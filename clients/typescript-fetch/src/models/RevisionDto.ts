/* tslint:disable */
/* eslint-disable */
/**
 * Hippo.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RevisionComponentDto } from './RevisionComponentDto';
import {
    RevisionComponentDtoFromJSON,
    RevisionComponentDtoFromJSONTyped,
    RevisionComponentDtoToJSON,
} from './RevisionComponentDto';

/**
 * 
 * @export
 * @interface RevisionDto
 */
export interface RevisionDto {
    /**
     * 
     * @type {string}
     * @memberof RevisionDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RevisionDto
     */
    appId: string;
    /**
     * 
     * @type {string}
     * @memberof RevisionDto
     */
    revisionNumber: string;
    /**
     * 
     * @type {Array<RevisionComponentDto>}
     * @memberof RevisionDto
     */
    readonly components: Array<RevisionComponentDto>;
}

/**
 * Check if a given object implements the RevisionDto interface.
 */
export function instanceOfRevisionDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "appId" in value;
    isInstance = isInstance && "revisionNumber" in value;
    isInstance = isInstance && "components" in value;

    return isInstance;
}

export function RevisionDtoFromJSON(json: any): RevisionDto {
    return RevisionDtoFromJSONTyped(json, false);
}

export function RevisionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevisionDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'appId': json['appId'],
        'revisionNumber': json['revisionNumber'],
        'components': ((json['components'] as Array<any>).map(RevisionComponentDtoFromJSON)),
    };
}

export function RevisionDtoToJSON(value?: RevisionDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'appId': value.appId,
        'revisionNumber': value.revisionNumber,
    };
}

